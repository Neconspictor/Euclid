configuration for normal map 1:	
	
	vec3 tangentNormal = texture(material.normalMap, fs_in.texCoords).xyz;// * 2.0 - 1.0;
	tangentNormal = (tangentNormal *2.0) - 1.0;
	
	tangentNormal.x *= -1;
	tangentNormal.y *= -1;

    vec3 Q1  = dFdx(fs_in.fragPos);
    vec3 Q2  = dFdy(fs_in.fragPos);
    vec2 st1 = dFdx(fs_in.texCoords);
    vec2 st2 = dFdy(fs_in.texCoords);

    vec3 N   = normalize(fs_in.normal);
	mat4 model4D = transpose(inverse(model));
	N= normalize((model4D * vec4(N, 0)).rgb);
	
    vec3 T  = normalize(Q2*st1.t - Q1*st2.t);
    vec3 B  = -normalize(cross(T, N));
	//vec3 B  = -normalize(cross(N, T));
    mat3 TBN = mat3(T, B, N);
	

configuration for normal map 2: