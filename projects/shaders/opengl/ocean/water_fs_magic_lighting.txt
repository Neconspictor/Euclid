// realsitic water 
    vec3 extinction = vec3(4.5, 75.0, 300.0);
    float D = waterY - refractionY;
    float A = length(vs_out.positionWorld - refractionPositionWorld) / 9.0;
    A = 0.001;
    vec3 surfaceColor = vec3(1.0, 1.0, 1.0);//ambient.rgb;//vec3(1.0, 1.0, 1.0);
    vec3 bigDepthColor = vec3(0.0, 0.0, 0.0);
    vec3 testCameraPosition = vec3(0, 12.9, -0.5);
    float distanceToCamera = length(positionWorld - testCameraPosition); 
    //distanceToCamera = 9;
    float visibility = (10.0 - distanceToCamera) / 10.0; // lesser for positions farer away from camera  1 / distanceToCamera
    visibility = clamp(pow(visibility, 0.5), 0, 1);

    vec3 waterColor = mix(refractionColor.rgb, surfaceColor, clamp( A / visibility, 0.0, 1.0));
    waterColor = mix(waterColor, bigDepthColor, clamp(D / extinction, 0.0, 1.0));
    
    fragColor = vec4(waterColor, 1.0);